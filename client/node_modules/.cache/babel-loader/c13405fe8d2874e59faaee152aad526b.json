{"ast":null,"code":"var _jsxFileName = \"E:\\\\Utkarsh Web Developement\\\\Projects\\\\BLOGSPOT\\\\BLOGSPOT\\\\client\\\\src\\\\components\\\\comment\\\\Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, makeStyles, TextareaAutosize, Typography } from '@material-ui/core';\nimport { Delete, Edit } from '@material-ui/icons';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { deleteComment, editComment, getCommentData } from '../service/api';\nimport History from '../History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styleClass = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  commentbox: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"25px\",\n    marginBottom: \"5px\"\n  },\n  timeicon: {\n    marginLeft: \"5px\",\n    opacity: \"0.5\"\n  },\n  date: {\n    marginLeft: \"5px\",\n    opacity: \"0.6\"\n  },\n  comment: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    outline: \"none\",\n    border: \"none\"\n  },\n  icon: {\n    border: \"1px solid #000\",\n    borderRadius: \"5px\",\n    padding: \"5px\",\n    margin: \"5px\"\n  }\n});\n\nconst Comment = props => {\n  _s();\n\n  const id = props.id;\n  const p_trigger = props.trigger;\n  const p_update = props.triggerfunction;\n  const styles = styleClass();\n  const [visible, changeVisible] = useState(false);\n  const [comment, setComment] = useState({});\n  const [trigger, update] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getCommentData(id);\n      setComment(data);\n      console.log(data);\n    };\n\n    fetchData();\n  }, [trigger]);\n\n  const editCommentField = e => {\n    setComment(co => ({ ...co,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const changecomment = () => {\n    editComment(id, comment);\n    update(!trigger);\n    changeVisible(!visible);\n  };\n\n  const removeComment = async () => {\n    await deleteComment(id); //p_update(!p_trigger);\n\n    History.push(`/display/${comment.postid}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: styles.commentbox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.author,\n          children: comment.commentauthor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n          className: styles.timeicon,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.date,\n          children: new Date(comment.commentdate).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), !visible && /*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.comment,\n        children: comment.commentdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this), visible && /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        onChange: e => editCommentField(e),\n        name: \"commentdata\",\n        className: styles.comment,\n        children: comment.commentdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.buttons,\n      children: [!visible && /*#__PURE__*/_jsxDEV(Edit, {\n        onClick: () => changeVisible(!visible),\n        className: styles.icon,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this), visible && /*#__PURE__*/_jsxDEV(DoneIcon, {\n        onClick: () => changecomment(),\n        className: styles.icon,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Delete, {\n        onClick: () => removeComment(),\n        className: styles.icon,\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"jmTtKtQ83I4RmPvPlok9Yw5WXyY=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["E:/Utkarsh Web Developement/Projects/BLOGSPOT/BLOGSPOT/client/src/components/comment/Comment.jsx"],"names":["React","useState","useEffect","Box","makeStyles","TextareaAutosize","Typography","Delete","Edit","AccessTimeIcon","DoneIcon","deleteComment","editComment","getCommentData","History","styleClass","container","display","flexDirection","commentbox","header","marginTop","marginBottom","timeicon","marginLeft","opacity","date","comment","outline","border","icon","borderRadius","padding","margin","Comment","props","id","p_trigger","trigger","p_update","triggerfunction","styles","visible","changeVisible","setComment","update","fetchData","data","console","log","editCommentField","e","co","target","name","value","changecomment","removeComment","push","postid","author","commentauthor","Date","commentdate","toDateString","commentdata","buttons"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {Box,makeStyles, TextareaAutosize, Typography} from '@material-ui/core'\r\nimport {Delete, Edit} from '@material-ui/icons'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { deleteComment, editComment, getCommentData } from '../service/api';\r\nimport History from '../History';\r\n\r\nconst styleClass =makeStyles({\r\n    container:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n    },\r\n    commentbox:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\"\r\n    },\r\n    header:{\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n        marginTop:\"25px\",\r\n        marginBottom:\"5px\"\r\n        \r\n    },\r\n    timeicon:{\r\n        marginLeft:\"5px\",\r\n        opacity:\"0.5\"\r\n    },\r\n    date:{\r\n        marginLeft:\"5px\",\r\n        opacity:\"0.6\"\r\n    },\r\n    comment:{\r\n        marginTop:\"5px\",\r\n        marginBottom:\"5px\",\r\n        outline:\"none\",\r\n        border:\"none\"\r\n    },\r\n    icon:{\r\n        border:\"1px solid #000\",\r\n        borderRadius:\"5px\",\r\n        padding:\"5px\",\r\n        margin:\"5px\"\r\n    }\r\n})\r\n\r\nconst Comment= (props) => {\r\n    const id=props.id;\r\n    const p_trigger=props.trigger;\r\n    const p_update=props.triggerfunction;\r\n    const styles=styleClass();\r\n    const [visible,changeVisible]=useState(false);\r\n\r\n    const [comment,setComment]=useState({});\r\n    const [trigger , update] =useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async ()=>{\r\n            const data=await getCommentData(id);\r\n            setComment(data);\r\n            console.log(data);\r\n        }\r\n        fetchData();\r\n    },[trigger])\r\n    \r\n    const editCommentField=(e)=>{\r\n        setComment(co => ({...co,[e.target.name]:e.target.value}));\r\n    }\r\n\r\n\r\n    const changecomment=()=>{\r\n        editComment(id,comment);\r\n        update(!trigger);\r\n        changeVisible(!visible);\r\n    }\r\n    \r\n    const removeComment = async () =>{\r\n       await deleteComment(id);\r\n        //p_update(!p_trigger);\r\n        History.push(`/display/${comment.postid}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <Box className={styles.container}>\r\n           <Box className={styles.commentbox}> \r\n                <Box className={styles.header}>\r\n                    <Typography className={styles.author}>{comment.commentauthor}</Typography>\r\n                    <AccessTimeIcon className ={styles.timeicon}> </AccessTimeIcon>\r\n                    <Typography className={styles.date}>{new Date(comment.commentdate).toDateString()}</Typography>\r\n                </Box>\r\n                {\r\n                !visible && <Typography className={styles.comment}>{comment.commentdata}</Typography>\r\n                }\r\n                {\r\n                visible && <TextareaAutosize onChange={(e)=> editCommentField(e)} name=\"commentdata\" className={styles.comment}>{comment.commentdata}</TextareaAutosize>\r\n                }\r\n                \r\n                \r\n                \r\n            </Box>    \r\n            <Box className={styles.buttons}>\r\n                {\r\n                !visible && <Edit onClick={()=> changeVisible(!visible)} className={styles.icon} color=\"primary\" />\r\n                }\r\n                {\r\n                visible && <DoneIcon onClick={()=> changecomment()} className={styles.icon} color=\"primary\" />\r\n                }\r\n\r\n                <Delete onClick={()=> removeComment()} className={styles.icon} color=\"error\" />\r\n            </Box>    \r\n\r\n        </Box>    \r\n    )\r\n}\r\n\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}