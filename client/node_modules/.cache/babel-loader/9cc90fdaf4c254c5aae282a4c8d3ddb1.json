{"ast":null,"code":"var _jsxFileName = \"E:\\\\Utkarsh Web Developement\\\\Projects\\\\BLOGSPOT\\\\BLOGSPOT\\\\client\\\\src\\\\components\\\\post\\\\UpdatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Box, FormControl, makeStyles, Button, InputBase, TextareaAutosize } from '@material-ui/core';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport { getOnePostData, updatePostData, uploadImage } from '../service/api';\nimport History from '../History';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styleclass = makeStyles(theme => ({\n  container: {\n    marginTop: \"64px\",\n    padding: \"0px 100px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"0px\"\n    }\n  },\n  image: {\n    height: \"50vh\",\n    width: \"100%\",\n    objectFit: \"cover\"\n  },\n  icon: {\n    marginTop: \"7px\",\n    cursor: \"pointer\"\n  },\n  form: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    marginTop: \"15px\"\n  },\n  textfield: {\n    flex: \"1\",\n    margin: \"0px 10px\",\n    fontSize: \"25px\"\n  },\n  textarea: {\n    width: \"100%\",\n    marginTop: \"50px\",\n    border: \"none\",\n    '&:focus-Visible': {\n      outline: \"none\"\n    },\n    fontSize: \"18px\"\n  }\n}));\n/*Match is a default prop which can access various data like URL using match.params*/\n\nfunction UpdatePost({\n  match\n}) {\n  _s();\n\n  const style = styleclass();\n  const [post, setPost] = useState({});\n  const [file, setFile] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const url = post.image ? post.image : \"https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80'\";\n  useEffect(() => {\n    const getImage = async () => {\n      if (file) {\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append(\"file\", file);\n        const image = await uploadImage(data);\n        post.image = image.data;\n        setImage(post.image);\n      } else {\n        console.log(\"Error while fetching the image inside (create post)\");\n      }\n    };\n\n    getImage();\n  }, [file]);\n  useEffect(() => {\n    const fetchdata = async () => {\n      const data = await getOnePostData(match.params.id);\n      setPost(data);\n    };\n\n    fetchdata();\n  }, []);\n\n  const handlechange = e => {\n    setPost(post => ({ ...post,\n      [e.target.name]: e.target.value\n    }));\n    console.log(post);\n  };\n\n  const updateData = async () => {\n    console.log(post);\n    await updatePostData(match.params.id, post);\n    console.log(\"Data sent successfully\");\n    History.push(`/display/${match.params.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: style.image,\n        src: `${url}`,\n        alt: \"banner image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageinput\",\n          children: /*#__PURE__*/_jsxDEV(ImageSearchIcon, {\n            className: style.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          id: \"imageinput\",\n          onChange: e => {\n            setFile(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          className: style.textfield,\n          placeholder: \"title of blog\",\n          value: post.title,\n          name: \"title\",\n          onChange: e => handlechange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => updateData(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Category\",\n        value: post.category,\n        name: \"category\",\n        onChange: e => handlechange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        placeholder: \"Put Your Thoughts Here\",\n        minRows: \"5\",\n        className: style.textarea,\n        name: \"description\",\n        value: post.description,\n        onChange: e => handlechange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdatePost, \"cHl/0OxcXnVV3XtCUMujr4n6LLI=\");\n\n_c = UpdatePost;\nexport default UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["E:/Utkarsh Web Developement/Projects/BLOGSPOT/BLOGSPOT/client/src/components/post/UpdatePost.jsx"],"names":["React","useState","useEffect","Box","FormControl","makeStyles","Button","InputBase","TextareaAutosize","ImageSearchIcon","getOnePostData","updatePostData","uploadImage","History","Header","styleclass","theme","container","marginTop","padding","breakpoints","down","image","height","width","objectFit","icon","cursor","form","display","flexDirection","textfield","flex","margin","fontSize","textarea","border","outline","UpdatePost","match","style","post","setPost","file","setFile","setImage","url","getImage","data","FormData","append","name","console","log","fetchdata","params","id","handlechange","e","target","value","updateData","push","files","title","category","description"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport {Box, FormControl, makeStyles,Button, InputBase, TextareaAutosize} from '@material-ui/core'\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport { getOnePostData ,updatePostData,uploadImage } from '../service/api';\r\nimport History from '../History';\r\nimport Header from '../Header';\r\n\r\nconst styleclass=makeStyles(theme => ({\r\n    container:{\r\n        marginTop:\"64px\",\r\n        padding:\"0px 100px\",\r\n        [theme.breakpoints.down(\"md\")]:{\r\n            padding:\"0px\"\r\n        }\r\n        \r\n    },\r\n    image:{\r\n        height:\"50vh\",\r\n        width:\"100%\",\r\n        objectFit:\"cover\",\r\n        \r\n    },\r\n    icon:{\r\n        marginTop:\"7px\",\r\n        cursor:\"pointer\"\r\n    },\r\n    form:{\r\n        display:\"flex\",\r\n        width:\"100%\",\r\n        flexDirection:\"row\",\r\n        marginTop:\"15px\"\r\n    },\r\n    textfield:{\r\n        flex:\"1\",\r\n        margin:\"0px 10px\",\r\n        fontSize:\"25px\"\r\n    },\r\n    textarea:{\r\n        width:\"100%\",\r\n        marginTop:\"50px\",\r\n        border:\"none\",\r\n        '&:focus-Visible':{\r\n            outline:\"none\"\r\n        },\r\n        fontSize:\"18px\"\r\n    }\r\n})\r\n)\r\n/*Match is a default prop which can access various data like URL using match.params*/ \r\nfunction UpdatePost({match}) {\r\n    const style=styleclass()\r\n\r\n    const [post,setPost] =useState({})\r\n\r\n    const [file,setFile] =useState(\"\")\r\n\r\n    const [image,setImage]=useState(\"\")\r\n\r\n    const url =post.image ? post.image:\"https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80'\";\r\n    \r\n    useEffect(()=>{\r\n        const getImage= async () =>{\r\n            if(file){\r\n                const data=new FormData();\r\n                data.append(\"name\",file.name)\r\n                data.append(\"file\",file)\r\n                const image=await uploadImage(data)\r\n                post.image=image.data;\r\n                setImage(post.image);\r\n            }\r\n            else{\r\n                console.log(\"Error while fetching the image inside (create post)\");\r\n            }\r\n        }\r\n        getImage();\r\n    },[file])\r\n\r\n    useEffect( () => {\r\n        const fetchdata = async () =>{\r\n            const data= await getOnePostData(match.params.id);\r\n            setPost(data)\r\n        }\r\n        fetchdata();\r\n    }  \r\n    ,[])\r\n\r\n    const handlechange=(e)=>{\r\n        setPost(post => ({...post,[e.target.name] : e.target.value}))\r\n        console.log(post);\r\n    }\r\n\r\n    const updateData = async () =>{\r\n        console.log(post)\r\n        await updatePostData(match.params.id,post)\r\n        console.log(\"Data sent successfully\");\r\n        History.push(`/display/${match.params.id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header>\r\n      \r\n        </Header>\r\n        <Box className={style.container}>\r\n             <img className={style.image} src={`${url}`}  alt=\"banner image\" />\r\n            <FormControl className={style.form}>\r\n                <label htmlFor=\"imageinput\">\r\n                <ImageSearchIcon  className={style.icon} />\r\n                </label>\r\n                <input style={{display:\"none\"}} type=\"file\" id=\"imageinput\"\r\n                onChange ={(e)=> {setFile(e.target.files[0])}} />\r\n                \r\n                <InputBase \r\n                className={style.textfield} \r\n                placeholder=\"title of blog\" \r\n                value={post.title}\r\n                name=\"title\"\r\n                onChange={e => handlechange(e)}>\r\n                </InputBase> \r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => updateData()}>Update</Button>\r\n            </FormControl>\r\n            <InputBase \r\n            placeholder=\"Category\"\r\n             value={post.category}\r\n             name=\"category\"\r\n             onChange={e => handlechange(e)}\r\n             ></InputBase>\r\n            <TextareaAutosize \r\n            placeholder=\"Put Your Thoughts Here\"\r\n             minRows='5' \r\n             className={style.textarea} \r\n             name=\"description\"\r\n             value={post.description}\r\n             onChange={e => handlechange(e)}>\r\n            </TextareaAutosize>\r\n        </Box>\r\n        </>    \r\n    )\r\n}\r\n\r\nexport default UpdatePost\r\n"]},"metadata":{},"sourceType":"module"}