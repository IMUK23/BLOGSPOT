{"ast":null,"code":"var _jsxFileName = \"E:\\\\Utkarsh Web Developement\\\\Projects\\\\BLOGSPOT\\\\BLOGSPOT\\\\client\\\\src\\\\components\\\\comment\\\\PostComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, TextareaAutosize, Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Comment from '../comment/Comment';\nimport { getComments } from '../service/api';\nimport { sendComment } from '../service/api';\nimport History from '../History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styleClass = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\",\n    marginTop: \"30px\"\n  },\n  commentbox: {\n    width: \"90%\",\n    '&:focus-visible': {\n      outline: \"none\"\n    }\n  },\n  like: {\n    marginTop: \"20px\"\n  }\n});\n\nconst PostComment = props => {\n  _s();\n\n  const styles = styleClass();\n  const [visible, changeVisible] = useState(false);\n  const initialcommentvalue = {\n    postid: props.postid,\n    commentauthor: \"Utkarsh\",\n    commentdate: new Date(),\n    commentdata: \"\"\n  };\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(initialcommentvalue);\n  const [trigger, update] = useState(false);\n  useEffect(() => {\n    const fetchdata = async () => {\n      let data = await getComments(props.postid);\n      let arraydata = Array.from(data);\n      setComments(arraydata);\n      console.log(arraydata);\n    };\n\n    fetchdata();\n    console.log(comments);\n  }, [trigger]);\n\n  const addComment = e => {\n    if (e.target.value !== \"\") {\n      setComment(co => ({ ...co,\n        [e.target.name]: e.target.value\n      }));\n    }\n  };\n\n  const sendCommentData = async () => {\n    update(!trigger);\n    await sendComment(comment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!visible && /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n      className: styles.like,\n      onClick: () => {\n        changeVisible(!visible);\n      },\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this), visible && /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      className: styles.like,\n      onClick: () => {\n        changeVisible(!visible);\n      },\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        onChange: e => addComment(e),\n        className: styles.commentbox,\n        minRows: 3,\n        placeholder: \"Add Your Comment Here\",\n        name: \"commentdata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => sendCommentData(),\n        children: \" Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), comments.map(co => /*#__PURE__*/_jsxDEV(Comment, {\n      data: co\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n\n_s(PostComment, \"cSWak3sFz3FR0eqGJdK8DOW/QLE=\");\n\n_c = PostComment;\nexport default PostComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"sources":["E:/Utkarsh Web Developement/Projects/BLOGSPOT/BLOGSPOT/client/src/components/comment/PostComment.jsx"],"names":["Box","makeStyles","TextareaAutosize","Button","React","useState","useEffect","PersonIcon","FavoriteBorderIcon","FavoriteIcon","Comment","getComments","sendComment","History","styleClass","container","display","flexDirection","flexWrap","alignItems","marginTop","commentbox","width","outline","like","PostComment","props","styles","visible","changeVisible","initialcommentvalue","postid","commentauthor","commentdate","Date","commentdata","comments","setComments","comment","setComment","trigger","update","fetchdata","data","arraydata","Array","from","console","log","addComment","e","target","value","co","name","sendCommentData","map"],"mappings":"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","sourcesContent":["import { Box,makeStyles, TextareaAutosize,Button } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Comment from '../comment/Comment';\r\nimport { getComments } from '../service/api';\r\nimport { sendComment } from '../service/api';\r\nimport History from '../History';\r\n\r\nconst styleClass=makeStyles({\r\n    container:{\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"flex-start\",\r\n        marginTop:\"30px\"\r\n    },\r\n    commentbox:{\r\n        width:\"90%\",\r\n        '&:focus-visible':{\r\n            outline:\"none\"\r\n        }\r\n    },\r\n    like:{\r\n        marginTop:\"20px\",\r\n    }\r\n})\r\n\r\n\r\nconst PostComment = (props) => {\r\n    const styles=styleClass();\r\n    const [visible,changeVisible]=useState(false);\r\n    const initialcommentvalue={\r\n        postid: props.postid,\r\n        commentauthor:\"Utkarsh\",\r\n        commentdate: new Date(),\r\n        commentdata:\"\"\r\n    }\r\n    const [comments,setComments] =useState([]);\r\n\r\n    const [comment,setComment] = useState(initialcommentvalue);\r\n\r\n    const [trigger,update]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchdata= async ()=>{\r\n            let data=await getComments(props.postid);\r\n               let arraydata=Array.from(data);\r\n                setComments(arraydata);\r\n                console.log(arraydata);\r\n\r\n        }\r\n        fetchdata();\r\n        console.log(comments);\r\n    },[trigger])\r\n\r\n    const addComment=(e)=>{\r\n        if(e.target.value!==\"\")\r\n        {setComment(co => ({...co,[e.target.name]:e.target.value}))}\r\n    }\r\n\r\n    const sendCommentData= async ()=>{\r\n        update(!trigger);\r\n        await sendComment(comment);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !visible && <FavoriteBorderIcon className={styles.like} onClick={()=>{changeVisible(!visible)}} color=\"error\"/>\r\n            }\r\n            {\r\n                visible && <FavoriteIcon className={styles.like} onClick={()=>{changeVisible(!visible)}}  color=\"error\"/>\r\n            }\r\n            <Box className={styles.container}>\r\n                <PersonIcon/>\r\n                <TextareaAutosize onChange={(e=> addComment(e))} className={styles.commentbox} minRows={3} placeholder=\"Add Your Comment Here\" name=\"commentdata\" />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>sendCommentData()}> Post</Button>\r\n            </Box>\r\n            {comments.map(co=>(\r\n                <Comment data={co}/>\r\n            ))}\r\n            \r\n           \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n"]},"metadata":{},"sourceType":"module"}