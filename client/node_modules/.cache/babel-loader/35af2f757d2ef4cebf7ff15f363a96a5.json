{"ast":null,"code":"var _jsxFileName = \"E:\\\\Utkarsh Web Developement\\\\Projects\\\\BLOGSPOT\\\\BLOGSPOT\\\\client\\\\src\\\\components\\\\comment\\\\PostComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, TextareaAutosize, Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Comment from '../comment/Comment';\nimport { getComments } from '../service/api';\nimport { sendComment } from '../service/api';\nimport History from '../History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styleClass = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\",\n    marginTop: \"30px\"\n  },\n  commentbox: {\n    width: \"90%\",\n    '&:focus-visible': {\n      outline: \"none\"\n    }\n  },\n  like: {\n    marginTop: \"20px\"\n  }\n});\n\nconst PostComment = props => {\n  _s();\n\n  const styles = styleClass();\n  const [visible, changeVisible] = useState(false);\n  const initialcommentvalue = {\n    postid: props.postid,\n    commentauthor: \"Utkarsh\",\n    commentdate: new Date(),\n    commentdata: \"\"\n  };\n  const [comments, setComments] = useState({});\n  const [comment, setComment] = useState(initialcommentvalue);\n  useEffect(() => {\n    const fetchdata = async () => {\n      let data = await getComments(props.postid);\n      setComments(data);\n    };\n\n    fetchdata();\n    console.log(comments);\n  }, []);\n\n  const addComment = e => {\n    setComment(co => ({ ...co,\n      [e.target.name]: e.target.value\n    }));\n    console.log(comment);\n  };\n\n  const sendCommentData = async () => {\n    await sendComment(comment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!visible && /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n      className: styles.like,\n      onClick: () => {\n        changeVisible(!visible);\n      },\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }, this), visible && /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      className: styles.like,\n      onClick: () => {\n        changeVisible(!visible);\n      },\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        onChange: e => addComment(e),\n        className: styles.commentbox,\n        minRows: 3,\n        placeholder: \"Add Your Comment Here\",\n        name: \"commentdata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => sendCommentData(),\n        children: \" Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostComment, \"byJjwjySWXDLjX2fZTDEeJOvvx8=\");\n\n_c = PostComment;\nexport default PostComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"sources":["E:/Utkarsh Web Developement/Projects/BLOGSPOT/BLOGSPOT/client/src/components/comment/PostComment.jsx"],"names":["Box","makeStyles","TextareaAutosize","Button","React","useState","useEffect","PersonIcon","FavoriteBorderIcon","FavoriteIcon","Comment","getComments","sendComment","History","styleClass","container","display","flexDirection","flexWrap","alignItems","marginTop","commentbox","width","outline","like","PostComment","props","styles","visible","changeVisible","initialcommentvalue","postid","commentauthor","commentdate","Date","commentdata","comments","setComments","comment","setComment","fetchdata","data","console","log","addComment","e","co","target","name","value","sendCommentData"],"mappings":"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","sourcesContent":["import { Box,makeStyles, TextareaAutosize,Button } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Comment from '../comment/Comment';\r\nimport { getComments } from '../service/api';\r\nimport { sendComment } from '../service/api';\r\nimport History from '../History';\r\n\r\nconst styleClass=makeStyles({\r\n    container:{\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"flex-start\",\r\n        marginTop:\"30px\"\r\n    },\r\n    commentbox:{\r\n        width:\"90%\",\r\n        '&:focus-visible':{\r\n            outline:\"none\"\r\n        }\r\n    },\r\n    like:{\r\n        marginTop:\"20px\",\r\n    }\r\n})\r\n\r\n\r\nconst PostComment = (props) => {\r\n    const styles=styleClass();\r\n    const [visible,changeVisible]=useState(false);\r\n    const initialcommentvalue={\r\n        postid: props.postid,\r\n        commentauthor:\"Utkarsh\",\r\n        commentdate: new Date(),\r\n        commentdata:\"\"\r\n    }\r\n    const [comments,setComments] =useState({});\r\n\r\n    const [comment,setComment] = useState(initialcommentvalue);\r\n\r\n    useEffect(()=>{\r\n        const fetchdata= async ()=>{\r\n            let data=await getComments(props.postid);\r\n               \r\n                setComments(data);\r\n\r\n        }\r\n        fetchdata();\r\n        console.log(comments);\r\n    },[])\r\n\r\n    const addComment=(e)=>{\r\n        setComment(co => ({...co,[e.target.name]:e.target.value}))\r\n        console.log(comment);\r\n    }\r\n\r\n    const sendCommentData= async ()=>{\r\n        await sendComment(comment);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !visible && <FavoriteBorderIcon className={styles.like} onClick={()=>{changeVisible(!visible)}} color=\"error\"/>\r\n            }\r\n            {\r\n                visible && <FavoriteIcon className={styles.like} onClick={()=>{changeVisible(!visible)}}  color=\"error\"/>\r\n            }\r\n            <Box className={styles.container}>\r\n                <PersonIcon/>\r\n                <TextareaAutosize onChange={(e=> addComment(e))} className={styles.commentbox} minRows={3} placeholder=\"Add Your Comment Here\" name=\"commentdata\" />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>sendCommentData()}> Post</Button>\r\n            </Box>\r\n           \r\n            \r\n           \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n"]},"metadata":{},"sourceType":"module"}